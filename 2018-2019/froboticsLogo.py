# Base Colors
roboticsGold = rgb(200, 200, 150)
roboticsBlue = rgb(35, 50, 80)
roboticsWhite = rgb(250, 250, 240)
# Background
Rect(0, 0, 400, 400, fill=gradient(roboticsWhite, roboticsWhite, roboticsBlue), opacity=75)
################################################################################
# Team 4150 Title
################################################################################
baseLabelX = 105
baseLabelY = 290
baseLabelSize = 35
Label('TEAM', baseLabelX, baseLabelY, size=baseLabelSize, fill=roboticsBlue, bold=True)
Label('4150', baseLabelX + 40, baseLabelY + 33, size=baseLabelSize, fill=roboticsBlue, bold=True)
################################################################################
# Panther Head
################################################################################
pL = [165 , 260]
Polygon(
    pL[0] + 10, pL[1],
    pL[0], pL[1], # Don't touch, first point.
    pL[0] - 18, pL[1] - 20,
    pL[0] - 30, pL[1] - 33,
    pL[0] - 70, pL[1] - 41,
    pL[0] - 90, pL[1] - 35,
    pL[0] - 120, pL[1] - 35,
    pL[0] - 125, pL[1] - 40,
    pL[0] - 126, pL[1] - 60,
    pL[0] - 118, pL[1] - 62,
    pL[0] - 119, pL[1] - 75,
    pL[0] - 115, pL[1] - 76,
    pL[0] - 110, pL[1] - 76,
    pL[0] - 108, pL[1] - 70,
    pL[0] - 100, pL[1] - 65,
    pL[0] - 95, pL[1] - 65,
    pL[0] - 78, pL[1] - 83,
    pL[0] - 78, pL[1] - 90,
    pL[0] - 122, pL[1] - 102,
    pL[0] - 126, pL[1] - 91,
    pL[0] - 128, pL[1] - 102,
    pL[0] - 132, pL[1] - 108,
    pL[0] - 134, pL[1] - 120,
    pL[0] - 132, pL[1] - 126,
    pL[0] - 134, pL[1] - 132,
    pL[0] - 133, pL[1] - 148,
    pL[0] - 111, pL[1] - 150,
    pL[0] - 85, pL[1] - 165,
    pL[0] - 45, pL[1] - 175,
    pL[0], pL[1] - 165,
    pL[0] + 25, pL[1] - 170,
    pL[0] + 35, pL[1] - 165,
    pL[0] + 45, pL[1] - 150,
    pL[0] + 30, pL[1] - 135,
    pL[0] + 70, pL[1] - 100, # Don't touch, final point.
    fill=roboticsBlue
)
Oval(102, 110, 18, 8, fill=roboticsWhite)
################################################################################
# Panther Markings
################################################################################
# Circles ######################################################################
circles = [
    [62, 144],
    [62, 220],
    [110, 165],
    [120, 155],
    [170, 130],
    [160, 155],
    [170, 160],
    [125, 190],
    [150, 170],
    [150, 200],
    [150, 215],
    [165, 240],
    [140, 105],
    [148, 118],
    [190, 143],
    [165, 105]
]
for c in circles:
    Circle(c[0], c[1], 4.5, fill=roboticsWhite)

# Lines ########################################################################
lines = [
    [62, 144, 98, 110],
    [120, 155, 160, 155],
    [140, 105, 118, 105],
    [118, 105, 75, 155],
    [34, 155, 90, 155],
    [148, 118, 122, 118],
    [90, 155, 122, 118],
    [177, 90, 205, 120],
    [220, 160, 165, 105],
    [185, 174, 170, 160],
    [147, 240, 175, 210],
    [46, 190, 60, 190],
    [70, 210, 40, 210],
    [85, 223, 70, 210],
    [70, 195, 95, 219],
    [70, 180, 113, 224],
    [100, 172, 125, 190],
    [120, 172, 87, 172],
    [150, 200, 120, 172],
    [98, 161, 55, 161],
    [170, 130, 125, 130],
    [98, 161, 125, 130],
    [190, 143, 113, 143],
    [70, 100, 62, 118],
    [32, 118, 62, 118],
    [53, 135,33, 135],
    [95, 95, 53, 135],
    [80, 95, 133, 95],
    [142, 88, 133, 95],
    [178, 188, 150, 215],
    [170, 195, 150, 170],
    [55, 210, 45, 203],
    [45, 203, 39, 203]
]
for l in lines:
    Line(l[0], l[1], l[2], l[3], lineWidth=3, fill=roboticsWhite)
################################################################################
# Polygon
################################################################################
rL = [270, 235]
RegularPolygon(rL[0], rL[1], 110, 6, fill=roboticsGold)
Star(rL[0], rL[1], 103, 3, roundness=100, fill=roboticsBlue, border='white', borderWidth=3)
################################################################################
# FR
################################################################################
# F
Polygon(
    200, 265, # Start
    200, 200,
    260, 165,
    260, 190,
    220, 210,
    220, 220,
    253, 230,
    253, 250,
    222, 245,
    220, 280, # End
    fill=roboticsGold,
    border=roboticsWhite
)
# R
Polygon(
    275, 315,# Start
    275, 160,
    340, 215,
    340, 230,
    325, 250,
    340, 280,
    322, 290,
    300, 250,
    300, 300, # End
    fill=roboticsGold,
    border=roboticsWhite
)
Polygon(
    295, 200, # Start
    318, 210,
    320, 225,
    295, 230, # End
    fill=roboticsBlue,
    border=roboticsWhite
)

################################################################################
# Old Code that unfortunately didn't work, couldn't get a string to retain single
# quotes. I tried different methods of trying to put the single quotes in but it
# still unfortunately didn't work. ¯\_(ツ)_/¯
# ################################################################################
# roboticsGold = rgb(200, 200, 150)
# roboticsBlue = rgb(35, 50, 80)
# roboticsWhite = rgb(250, 250, 240)
# Rect(0, 0, 400, 400, fill=gradient(roboticsWhite, roboticsWhite, roboticsBlue), opacity=75)
# ################################################################################
# # List of Shapes to Draw
# ################################################################################
# a = 'testing'
# shapes = [
#     {'type': 'label','args': ['testing', 200, 200]}
# ]

# ################################################################################
# # All Valid Functions
# ################################################################################
# funcTypes = {
#     'rect': 'Rect',
#     'oval': 'Oval',
#     'circle': 'Circle',
#     'line': 'Line',
#     'label': 'Label',
#     'regpoly': 'RegularPolygon',
#     'poly': 'Polygon'
# }

# ################################################################################
# # Generate and Run Functions
# ################################################################################
# # for s in shapes:
#     # func = funcTypes.get(s['type'], 'none')
#     ### Generate Function Arguments
# t = ','.join(
#         for f in shapes[0]['args']:
#             if (type(f) == 'str'):
#                 '"{f}"'.format(f)
#             else:
#                 '{f}'.format(f)
#     )
#     # eval(f'{func}({argString})')
